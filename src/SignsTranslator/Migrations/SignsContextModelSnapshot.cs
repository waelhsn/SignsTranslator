// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SignsTranslator.Models;

namespace SignsTranslator.Migrations
{
    [DbContext(typeof(SignsContext))]
    partial class SignsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SignsTranslator.Models.DashBoard", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdminName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("DashBoard");
                });

            modelBuilder.Entity("SignsTranslator.Models.Signs", b =>
                {
                    b.Property<int>("SignId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApproverID")
                        .HasColumnType("int");

                    b.Property<string>("Arabic")
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("English")
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("LanguageID")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Russian")
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Swedish")
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SignId");

                    b.ToTable("AllSigns");
                });

            modelBuilder.Entity("SignsTranslator.Models.SignsApprovers", b =>
                {
                    b.Property<int>("ApproverID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApproverName")
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ApproverID");

                    b.ToTable("SignsApprovers");
                });

            modelBuilder.Entity("SignsTranslator.Models.SignsLayouts", b =>
                {
                    b.Property<int>("SignId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImageThumbnail")
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("LayoutId")
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("PDFDefinition")
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("SignsSignId")
                        .HasColumnType("int");

                    b.HasKey("SignId");

                    b.HasIndex("SignsSignId");

                    b.ToTable("SignsLayouts");
                });

            modelBuilder.Entity("SignsTranslator.Models.SignsLayouts", b =>
                {
                    b.HasOne("SignsTranslator.Models.Signs", null)
                        .WithMany("SignsLayouts")
                        .HasForeignKey("SignsSignId");
                });
#pragma warning restore 612, 618
        }
    }
}
